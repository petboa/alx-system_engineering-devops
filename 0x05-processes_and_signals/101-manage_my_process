#!/usr/bin/env bash
# Manages the script manage_my_process.
#   When passed the argument `start`:
#     1. Starts manage_my_process
#     2. Creates a file containings its PID in /var/run/my_process.pid
#     3. Displays "manage_my_process started"
#   When passed the argument `stop`:
#     1. Stops manage_my_process
#     2. Deletes the file /var/run/my_process.pid
#     3. Displays "manage_my_process stopped"
#   When passed the argument `restart`:
#     1. Stops manage_my_process
#     2. Deletes the file /var/run/my_process.pid
#     3. Starts manage_my_process
#     4. Creates a file containing its PID in /var/run/my_process.pid
#     5. Displays "manage_my_process restarted"
#   If any other or no arguments are passed, displays
#+  "Usage: manage_my_process {start|stop|restart}"

PIDFILE="/var/run/my_process.pid"

if [ "$1" == "start" ]; then
  ./manage_my_process &
  echo $$ > "$PIDFILE"
  echo "manage_my_process started"

elif [ "$1" == "stop" ]; then
  if [ -f "$PIDFILE" ]; then
    kill "$(cat "$PIDFILE")"
    rm "$PIDFILE"
    echo "manage_my_process stopped"
  else
    echo "manage_my_process is not running"
  fi

elif [ "$1" == "restart" ]; then
  if [ -f "$PIDFILE" ]; then
    kill "$(cat "$PIDFILE")"
    rm "$PIDFILE"
  fi
  ./manage_my_process &
  echo $$ > "$PIDFILE"
  echo "manage_my_process restarted"

else
  echo "Usage: manage_my_process {start|stop|restart}"
fi

# Trap the SIGTERM signal and remove the PID file before exiting
trap 'rm -f "$PIDFILE"; exit' SIGTERM
